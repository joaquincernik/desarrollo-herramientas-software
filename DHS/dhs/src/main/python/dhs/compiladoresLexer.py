# Generated from /home/joaquincernik/Desktop/facultad/DHS/dhs/src/main/python/dhs/compiladores.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,17,100,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,
        8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,
        4,13,71,8,13,11,13,12,13,72,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,
        15,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,3,18,91,8,18,1,18,1,18,
        1,18,5,18,96,8,18,10,18,12,18,99,9,18,0,0,19,1,0,3,0,5,1,7,2,9,3,
        11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,27,12,29,13,31,14,33,15,
        35,16,37,17,1,0,3,2,0,65,90,97,122,1,0,48,57,3,0,9,10,13,13,32,32,
        102,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,41,1,0,0,0,5,43,1,0,0,
        0,7,45,1,0,0,0,9,47,1,0,0,0,11,49,1,0,0,0,13,51,1,0,0,0,15,53,1,
        0,0,0,17,55,1,0,0,0,19,57,1,0,0,0,21,59,1,0,0,0,23,61,1,0,0,0,25,
        63,1,0,0,0,27,70,1,0,0,0,29,74,1,0,0,0,31,78,1,0,0,0,33,82,1,0,0,
        0,35,84,1,0,0,0,37,90,1,0,0,0,39,40,7,0,0,0,40,2,1,0,0,0,41,42,7,
        1,0,0,42,4,1,0,0,0,43,44,5,40,0,0,44,6,1,0,0,0,45,46,5,41,0,0,46,
        8,1,0,0,0,47,48,5,123,0,0,48,10,1,0,0,0,49,50,5,125,0,0,50,12,1,
        0,0,0,51,52,5,59,0,0,52,14,1,0,0,0,53,54,5,43,0,0,54,16,1,0,0,0,
        55,56,5,45,0,0,56,18,1,0,0,0,57,58,5,42,0,0,58,20,1,0,0,0,59,60,
        5,47,0,0,60,22,1,0,0,0,61,62,5,37,0,0,62,24,1,0,0,0,63,64,5,119,
        0,0,64,65,5,104,0,0,65,66,5,105,0,0,66,67,5,108,0,0,67,68,5,101,
        0,0,68,26,1,0,0,0,69,71,3,3,1,0,70,69,1,0,0,0,71,72,1,0,0,0,72,70,
        1,0,0,0,72,73,1,0,0,0,73,28,1,0,0,0,74,75,5,105,0,0,75,76,5,110,
        0,0,76,77,5,116,0,0,77,30,1,0,0,0,78,79,5,102,0,0,79,80,5,111,0,
        0,80,81,5,114,0,0,81,32,1,0,0,0,82,83,5,61,0,0,83,34,1,0,0,0,84,
        85,7,2,0,0,85,86,1,0,0,0,86,87,6,17,0,0,87,36,1,0,0,0,88,91,3,1,
        0,0,89,91,5,95,0,0,90,88,1,0,0,0,90,89,1,0,0,0,91,97,1,0,0,0,92,
        96,3,1,0,0,93,96,3,3,1,0,94,96,5,95,0,0,95,92,1,0,0,0,95,93,1,0,
        0,0,95,94,1,0,0,0,96,99,1,0,0,0,97,95,1,0,0,0,97,98,1,0,0,0,98,38,
        1,0,0,0,99,97,1,0,0,0,5,0,72,90,95,97,1,6,0,0
    ]

class compiladoresLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PA = 1
    PC = 2
    LLA = 3
    LLC = 4
    PYC = 5
    SUMA = 6
    RESTA = 7
    MULT = 8
    DIV = 9
    MOD = 10
    WHILE = 11
    NUMERO = 12
    INT = 13
    FOR = 14
    ASIG = 15
    WS = 16
    ID = 17

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'{'", "'}'", "';'", "'+'", "'-'", "'*'", "'/'", 
            "'%'", "'while'", "'int'", "'for'", "'='" ]

    symbolicNames = [ "<INVALID>",
            "PA", "PC", "LLA", "LLC", "PYC", "SUMA", "RESTA", "MULT", "DIV", 
            "MOD", "WHILE", "NUMERO", "INT", "FOR", "ASIG", "WS", "ID" ]

    ruleNames = [ "LETRA", "DIGITO", "PA", "PC", "LLA", "LLC", "PYC", "SUMA", 
                  "RESTA", "MULT", "DIV", "MOD", "WHILE", "NUMERO", "INT", 
                  "FOR", "ASIG", "WS", "ID" ]

    grammarFileName = "compiladores.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


